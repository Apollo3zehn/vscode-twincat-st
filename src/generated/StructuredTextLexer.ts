// Generated from /home/vincent/Documents/Git/GitHub/vscode-twincat-st/src/StructuredText.g4 by ANTLR 4.13.1

import * as antlr from "antlr4ng";
import { Token } from "antlr4ng";


export class StructuredTextLexer extends antlr.Lexer {
    public static readonly T__0 = 1;
    public static readonly T__1 = 2;
    public static readonly T__2 = 3;
    public static readonly T__3 = 4;
    public static readonly T__4 = 5;
    public static readonly T__5 = 6;
    public static readonly T__6 = 7;
    public static readonly T__7 = 8;
    public static readonly T__8 = 9;
    public static readonly T__9 = 10;
    public static readonly T__10 = 11;
    public static readonly T__11 = 12;
    public static readonly T__12 = 13;
    public static readonly T__13 = 14;
    public static readonly T__14 = 15;
    public static readonly T__15 = 16;
    public static readonly T__16 = 17;
    public static readonly T__17 = 18;
    public static readonly T__18 = 19;
    public static readonly T__19 = 20;
    public static readonly T__20 = 21;
    public static readonly T__21 = 22;
    public static readonly T__22 = 23;
    public static readonly T__23 = 24;
    public static readonly T__24 = 25;
    public static readonly T__25 = 26;
    public static readonly T__26 = 27;
    public static readonly T__27 = 28;
    public static readonly T__28 = 29;
    public static readonly T__29 = 30;
    public static readonly T__30 = 31;
    public static readonly T__31 = 32;
    public static readonly T__32 = 33;
    public static readonly T__33 = 34;
    public static readonly T__34 = 35;
    public static readonly T__35 = 36;
    public static readonly T__36 = 37;
    public static readonly T__37 = 38;
    public static readonly T__38 = 39;
    public static readonly T__39 = 40;
    public static readonly T__40 = 41;
    public static readonly PROGRAM = 42;
    public static readonly END_PROGRAM = 43;
    public static readonly FUNCTION_BLOCK = 44;
    public static readonly END_FUNCTION_BLOCK = 45;
    public static readonly FUNCTION = 46;
    public static readonly END_FUNCTION = 47;
    public static readonly PROPERTY = 48;
    public static readonly END_PROPERTY = 49;
    public static readonly IMPLEMENTS = 50;
    public static readonly EXTENDS = 51;
    public static readonly GET = 52;
    public static readonly END_GET = 53;
    public static readonly SET = 54;
    public static readonly END_SET = 55;
    public static readonly VAR = 56;
    public static readonly VAR_INPUT = 57;
    public static readonly VAR_OUTPUT = 58;
    public static readonly VAR_IN_OUT = 59;
    public static readonly VAR_TEMP = 60;
    public static readonly VAR_EXTERNAL = 61;
    public static readonly VAR_GLOBAL = 62;
    public static readonly VAR_INST = 63;
    public static readonly VAR_STAT = 64;
    public static readonly END_VAR = 65;
    public static readonly IF = 66;
    public static readonly THEN = 67;
    public static readonly ELSIF = 68;
    public static readonly ELSE = 69;
    public static readonly END_IF = 70;
    public static readonly CASE = 71;
    public static readonly ARRAY = 72;
    public static readonly OF = 73;
    public static readonly END_CASE = 74;
    public static readonly WHILE = 75;
    public static readonly DO = 76;
    public static readonly END_WHILE = 77;
    public static readonly REPEAT = 78;
    public static readonly UNTIL = 79;
    public static readonly END_REPEAT = 80;
    public static readonly FOR = 81;
    public static readonly TO = 82;
    public static readonly BY = 83;
    public static readonly END_FOR = 84;
    public static readonly RETURN = 85;
    public static readonly EXIT = 86;
    public static readonly CONTINUE = 87;
    public static readonly AND = 88;
    public static readonly OR = 89;
    public static readonly XOR = 90;
    public static readonly METHOD = 91;
    public static readonly END_METHOD = 92;
    public static readonly INTERFACE = 93;
    public static readonly END_INTERFACE = 94;
    public static readonly STRUCT = 95;
    public static readonly END_STRUCT = 96;
    public static readonly ENUM = 97;
    public static readonly END_ENUM = 98;
    public static readonly ABSTRACT = 99;
    public static readonly FINAL = 100;
    public static readonly CONSTANT = 101;
    public static readonly PUBLIC = 102;
    public static readonly PRIVATE = 103;
    public static readonly PROTECTED = 104;
    public static readonly INTERNAL = 105;
    public static readonly MOD = 106;
    public static readonly TYPE = 107;
    public static readonly END_TYPE = 108;
    public static readonly CARET = 109;
    public static readonly REFERENCE_TO = 110;
    public static readonly POINTER_TO = 111;
    public static readonly LPAREN = 112;
    public static readonly RPAREN = 113;
    public static readonly BOOL = 114;
    public static readonly NUMBER = 115;
    public static readonly TIME_LITERAL = 116;
    public static readonly ID = 117;
    public static readonly STRING_LITERAL = 118;
    public static readonly WS = 119;
    public static readonly COMMENT = 120;
    public static readonly COMMENT_BLOCK = 121;

    public static readonly channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    ];

    public static readonly literalNames = [
        null, "':'", "','", "':='", "';'", "'REF='", "'['", "']'", "'..'", 
        "'INT'", "'REAL'", "'BOOL'", "'STRING'", "'DINT'", "'BYTE'", "'WORD'", 
        "'DWORD'", "'SINT'", "'USINT'", "'UINT'", "'UDINT'", "'LINT'", "'ULINT'", 
        "'LREAL'", "'TIME'", "'DATE'", "'TIME_OF_DAY'", "'DATE_AND_TIME'", 
        "'.'", "'=>'", "'*'", "'/'", "'+'", "'-'", "'='", "'<'", "'>'", 
        "'<='", "'>='", "'<>'", "'{'", "'}'", "'PROGRAM'", "'END_PROGRAM'", 
        "'FUNCTION_BLOCK'", "'END_FUNCTION_BLOCK'", "'FUNCTION'", "'END_FUNCTION'", 
        "'PROPERTY'", "'END_PROPERTY'", "'IMPLEMENTS'", "'EXTENDS'", "'GET'", 
        "'END_GET'", "'SET'", "'END_SET'", "'VAR'", "'VAR_INPUT'", "'VAR_OUTPUT'", 
        "'VAR_IN_OUT'", "'VAR_TEMP'", "'VAR_EXTERNAL'", "'VAR_GLOBAL'", 
        "'VAR_INST'", "'VAR_STAT'", "'END_VAR'", "'IF'", "'THEN'", "'ELSIF'", 
        "'ELSE'", "'END_IF'", "'CASE'", "'ARRAY'", "'OF'", "'END_CASE'", 
        "'WHILE'", "'DO'", "'END_WHILE'", "'REPEAT'", "'UNTIL'", "'END_REPEAT'", 
        "'FOR'", "'TO'", "'BY'", "'END_FOR'", "'RETURN'", "'EXIT'", "'CONTINUE'", 
        "'AND'", "'OR'", "'XOR'", "'METHOD'", "'END_METHOD'", "'INTERFACE'", 
        "'END_INTERFACE'", "'STRUCT'", "'END_STRUCT'", "'ENUM'", "'END_ENUM'", 
        "'ABSTRACT'", "'FINAL'", "'CONSTANT'", "'PUBLIC'", "'PRIVATE'", 
        "'PROTECTED'", "'INTERNAL'", "'MOD'", "'TYPE'", "'END_TYPE'", "'^'", 
        "'REFERENCE TO'", "'POINTER TO'", "'('", "')'"
    ];

    public static readonly symbolicNames = [
        null, null, null, null, null, null, null, null, null, null, null, 
        null, null, null, null, null, null, null, null, null, null, null, 
        null, null, null, null, null, null, null, null, null, null, null, 
        null, null, null, null, null, null, null, null, null, "PROGRAM", 
        "END_PROGRAM", "FUNCTION_BLOCK", "END_FUNCTION_BLOCK", "FUNCTION", 
        "END_FUNCTION", "PROPERTY", "END_PROPERTY", "IMPLEMENTS", "EXTENDS", 
        "GET", "END_GET", "SET", "END_SET", "VAR", "VAR_INPUT", "VAR_OUTPUT", 
        "VAR_IN_OUT", "VAR_TEMP", "VAR_EXTERNAL", "VAR_GLOBAL", "VAR_INST", 
        "VAR_STAT", "END_VAR", "IF", "THEN", "ELSIF", "ELSE", "END_IF", 
        "CASE", "ARRAY", "OF", "END_CASE", "WHILE", "DO", "END_WHILE", "REPEAT", 
        "UNTIL", "END_REPEAT", "FOR", "TO", "BY", "END_FOR", "RETURN", "EXIT", 
        "CONTINUE", "AND", "OR", "XOR", "METHOD", "END_METHOD", "INTERFACE", 
        "END_INTERFACE", "STRUCT", "END_STRUCT", "ENUM", "END_ENUM", "ABSTRACT", 
        "FINAL", "CONSTANT", "PUBLIC", "PRIVATE", "PROTECTED", "INTERNAL", 
        "MOD", "TYPE", "END_TYPE", "CARET", "REFERENCE_TO", "POINTER_TO", 
        "LPAREN", "RPAREN", "BOOL", "NUMBER", "TIME_LITERAL", "ID", "STRING_LITERAL", 
        "WS", "COMMENT", "COMMENT_BLOCK"
    ];

    public static readonly modeNames = [
        "DEFAULT_MODE",
    ];

    public static readonly ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", 
        "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", 
        "T__16", "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", 
        "T__24", "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
        "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", 
        "T__40", "PROGRAM", "END_PROGRAM", "FUNCTION_BLOCK", "END_FUNCTION_BLOCK", 
        "FUNCTION", "END_FUNCTION", "PROPERTY", "END_PROPERTY", "IMPLEMENTS", 
        "EXTENDS", "GET", "END_GET", "SET", "END_SET", "VAR", "VAR_INPUT", 
        "VAR_OUTPUT", "VAR_IN_OUT", "VAR_TEMP", "VAR_EXTERNAL", "VAR_GLOBAL", 
        "VAR_INST", "VAR_STAT", "END_VAR", "IF", "THEN", "ELSIF", "ELSE", 
        "END_IF", "CASE", "ARRAY", "OF", "END_CASE", "WHILE", "DO", "END_WHILE", 
        "REPEAT", "UNTIL", "END_REPEAT", "FOR", "TO", "BY", "END_FOR", "RETURN", 
        "EXIT", "CONTINUE", "AND", "OR", "XOR", "METHOD", "END_METHOD", 
        "INTERFACE", "END_INTERFACE", "STRUCT", "END_STRUCT", "ENUM", "END_ENUM", 
        "ABSTRACT", "FINAL", "CONSTANT", "PUBLIC", "PRIVATE", "PROTECTED", 
        "INTERNAL", "MOD", "TYPE", "END_TYPE", "CARET", "REFERENCE_TO", 
        "POINTER_TO", "LPAREN", "RPAREN", "BOOL", "NUMBER", "TIME_LITERAL", 
        "ID", "STRING_LITERAL", "WS", "COMMENT", "COMMENT_BLOCK",
    ];


    public constructor(input: antlr.CharStream) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, StructuredTextLexer._ATN, StructuredTextLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }

    public get grammarFileName(): string { return "StructuredText.g4"; }

    public get literalNames(): (string | null)[] { return StructuredTextLexer.literalNames; }
    public get symbolicNames(): (string | null)[] { return StructuredTextLexer.symbolicNames; }
    public get ruleNames(): string[] { return StructuredTextLexer.ruleNames; }

    public get serializedATN(): number[] { return StructuredTextLexer._serializedATN; }

    public get channelNames(): string[] { return StructuredTextLexer.channelNames; }

    public get modeNames(): string[] { return StructuredTextLexer.modeNames; }

    public static readonly _serializedATN: number[] = [
        4,0,121,1191,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,
        5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,
        2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,
        7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,
        2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,
        7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
        2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
        7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,
        2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,
        7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,
        7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,
        2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,
        7,114,2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,
        2,120,7,120,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,
        1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
        1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,
        1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,
        1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
        1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,
        1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
        1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,30,
        1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,
        1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,
        1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
        1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
        1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,
        1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,
        1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,
        1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
        1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
        1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
        1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,
        1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,
        1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,
        1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,
        1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,
        1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,
        1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
        1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,
        1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,
        1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,
        1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,
        1,67,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,
        1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,
        1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,
        1,74,1,74,1,74,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,
        1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,
        1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,
        1,79,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,82,1,83,1,83,
        1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,84,1,84,
        1,85,1,85,1,85,1,85,1,85,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,
        1,86,1,87,1,87,1,87,1,87,1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,90,
        1,90,1,90,1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,91,1,91,1,91,
        1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,
        1,92,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,
        1,93,1,93,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,
        1,95,1,95,1,95,1,95,1,95,1,95,1,95,1,96,1,96,1,96,1,96,1,96,1,97,
        1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,
        1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,99,1,99,1,100,1,100,1,
        100,1,100,1,100,1,100,1,100,1,100,1,100,1,101,1,101,1,101,1,101,
        1,101,1,101,1,101,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,
        1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,104,
        1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,105,1,105,1,105,
        1,105,1,106,1,106,1,106,1,106,1,106,1,107,1,107,1,107,1,107,1,107,
        1,107,1,107,1,107,1,107,1,108,1,108,1,109,1,109,1,109,1,109,1,109,
        1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,110,1,110,1,110,
        1,110,1,110,1,110,1,110,1,110,1,110,1,110,1,110,1,111,1,111,1,112,
        1,112,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,3,113,
        981,8,113,1,114,3,114,984,8,114,1,114,1,114,5,114,988,8,114,10,114,
        12,114,991,9,114,1,114,1,114,4,114,995,8,114,11,114,12,114,996,1,
        114,1,114,4,114,1001,8,114,11,114,12,114,1002,3,114,1005,8,114,1,
        114,1,114,3,114,1009,8,114,1,114,4,114,1012,8,114,11,114,12,114,
        1013,3,114,1016,8,114,1,114,1,114,1,114,1,114,4,114,1022,8,114,11,
        114,12,114,1023,1,114,1,114,1,114,1,114,4,114,1030,8,114,11,114,
        12,114,1031,1,114,1,114,1,114,1,114,1,114,4,114,1039,8,114,11,114,
        12,114,1040,3,114,1043,8,114,1,114,4,114,1046,8,114,11,114,12,114,
        1047,1,114,1,114,4,114,1052,8,114,11,114,12,114,1053,3,114,1056,
        8,114,1,114,1,114,3,114,1060,8,114,1,114,4,114,1063,8,114,11,114,
        12,114,1064,3,114,1067,8,114,1,114,1,114,1,114,1,114,4,114,1073,
        8,114,11,114,12,114,1074,1,114,1,114,1,114,1,114,4,114,1081,8,114,
        11,114,12,114,1082,1,114,1,114,1,114,1,114,1,114,4,114,1090,8,114,
        11,114,12,114,1091,3,114,1094,8,114,1,114,4,114,1097,8,114,11,114,
        12,114,1098,1,114,1,114,4,114,1103,8,114,11,114,12,114,1104,3,114,
        1107,8,114,1,114,1,114,3,114,1111,8,114,1,114,4,114,1114,8,114,11,
        114,12,114,1115,3,114,1118,8,114,3,114,1120,8,114,1,115,1,115,1,
        115,1,115,4,115,1126,8,115,11,115,12,115,1127,1,115,1,115,1,115,
        3,115,1133,8,115,1,116,1,116,5,116,1137,8,116,10,116,12,116,1140,
        9,116,1,117,1,117,5,117,1144,8,117,10,117,12,117,1147,9,117,1,117,
        1,117,1,117,5,117,1152,8,117,10,117,12,117,1155,9,117,1,117,3,117,
        1158,8,117,1,118,4,118,1161,8,118,11,118,12,118,1162,1,118,1,118,
        1,119,1,119,1,119,1,119,5,119,1171,8,119,10,119,12,119,1174,9,119,
        1,119,1,119,1,120,1,120,1,120,1,120,5,120,1182,8,120,10,120,12,120,
        1185,9,120,1,120,1,120,1,120,1,120,1,120,1,1183,0,121,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
        53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,
        75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,
        97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,
        58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,
        135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,
        77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,
        173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,
        96,193,97,195,98,197,99,199,100,201,101,203,102,205,103,207,104,
        209,105,211,106,213,107,215,108,217,109,219,110,221,111,223,112,
        225,113,227,114,229,115,231,116,233,117,235,118,237,119,239,120,
        241,121,1,0,13,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,
        1,0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,2,0,48,49,95,95,2,0,
        48,55,95,95,4,0,48,57,65,70,95,95,97,102,4,0,68,68,72,72,77,77,83,
        83,3,0,10,10,13,13,34,34,3,0,10,10,13,13,39,39,3,0,9,10,13,13,32,
        32,2,0,10,10,13,13,1234,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
        1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
        1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
        1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
        1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
        1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
        1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
        1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,
        107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,
        0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,
        1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,
        0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,
        0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,
        153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,
        0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,
        1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,
        0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,
        0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,
        199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,
        0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,0,217,
        1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,0,225,1,0,0,0,
        0,227,1,0,0,0,0,229,1,0,0,0,0,231,1,0,0,0,0,233,1,0,0,0,0,235,1,
        0,0,0,0,237,1,0,0,0,0,239,1,0,0,0,0,241,1,0,0,0,1,243,1,0,0,0,3,
        245,1,0,0,0,5,247,1,0,0,0,7,250,1,0,0,0,9,252,1,0,0,0,11,257,1,0,
        0,0,13,259,1,0,0,0,15,261,1,0,0,0,17,264,1,0,0,0,19,268,1,0,0,0,
        21,273,1,0,0,0,23,278,1,0,0,0,25,285,1,0,0,0,27,290,1,0,0,0,29,295,
        1,0,0,0,31,300,1,0,0,0,33,306,1,0,0,0,35,311,1,0,0,0,37,317,1,0,
        0,0,39,322,1,0,0,0,41,328,1,0,0,0,43,333,1,0,0,0,45,339,1,0,0,0,
        47,345,1,0,0,0,49,350,1,0,0,0,51,355,1,0,0,0,53,367,1,0,0,0,55,381,
        1,0,0,0,57,383,1,0,0,0,59,386,1,0,0,0,61,388,1,0,0,0,63,390,1,0,
        0,0,65,392,1,0,0,0,67,394,1,0,0,0,69,396,1,0,0,0,71,398,1,0,0,0,
        73,400,1,0,0,0,75,403,1,0,0,0,77,406,1,0,0,0,79,409,1,0,0,0,81,411,
        1,0,0,0,83,413,1,0,0,0,85,421,1,0,0,0,87,433,1,0,0,0,89,448,1,0,
        0,0,91,467,1,0,0,0,93,476,1,0,0,0,95,489,1,0,0,0,97,498,1,0,0,0,
        99,511,1,0,0,0,101,522,1,0,0,0,103,530,1,0,0,0,105,534,1,0,0,0,107,
        542,1,0,0,0,109,546,1,0,0,0,111,554,1,0,0,0,113,558,1,0,0,0,115,
        568,1,0,0,0,117,579,1,0,0,0,119,590,1,0,0,0,121,599,1,0,0,0,123,
        612,1,0,0,0,125,623,1,0,0,0,127,632,1,0,0,0,129,641,1,0,0,0,131,
        649,1,0,0,0,133,652,1,0,0,0,135,657,1,0,0,0,137,663,1,0,0,0,139,
        668,1,0,0,0,141,675,1,0,0,0,143,680,1,0,0,0,145,686,1,0,0,0,147,
        689,1,0,0,0,149,698,1,0,0,0,151,704,1,0,0,0,153,707,1,0,0,0,155,
        717,1,0,0,0,157,724,1,0,0,0,159,730,1,0,0,0,161,741,1,0,0,0,163,
        745,1,0,0,0,165,748,1,0,0,0,167,751,1,0,0,0,169,759,1,0,0,0,171,
        766,1,0,0,0,173,771,1,0,0,0,175,780,1,0,0,0,177,784,1,0,0,0,179,
        787,1,0,0,0,181,791,1,0,0,0,183,798,1,0,0,0,185,809,1,0,0,0,187,
        819,1,0,0,0,189,833,1,0,0,0,191,840,1,0,0,0,193,851,1,0,0,0,195,
        856,1,0,0,0,197,865,1,0,0,0,199,874,1,0,0,0,201,880,1,0,0,0,203,
        889,1,0,0,0,205,896,1,0,0,0,207,904,1,0,0,0,209,914,1,0,0,0,211,
        923,1,0,0,0,213,927,1,0,0,0,215,932,1,0,0,0,217,941,1,0,0,0,219,
        943,1,0,0,0,221,956,1,0,0,0,223,967,1,0,0,0,225,969,1,0,0,0,227,
        980,1,0,0,0,229,983,1,0,0,0,231,1121,1,0,0,0,233,1134,1,0,0,0,235,
        1157,1,0,0,0,237,1160,1,0,0,0,239,1166,1,0,0,0,241,1177,1,0,0,0,
        243,244,5,58,0,0,244,2,1,0,0,0,245,246,5,44,0,0,246,4,1,0,0,0,247,
        248,5,58,0,0,248,249,5,61,0,0,249,6,1,0,0,0,250,251,5,59,0,0,251,
        8,1,0,0,0,252,253,5,82,0,0,253,254,5,69,0,0,254,255,5,70,0,0,255,
        256,5,61,0,0,256,10,1,0,0,0,257,258,5,91,0,0,258,12,1,0,0,0,259,
        260,5,93,0,0,260,14,1,0,0,0,261,262,5,46,0,0,262,263,5,46,0,0,263,
        16,1,0,0,0,264,265,5,73,0,0,265,266,5,78,0,0,266,267,5,84,0,0,267,
        18,1,0,0,0,268,269,5,82,0,0,269,270,5,69,0,0,270,271,5,65,0,0,271,
        272,5,76,0,0,272,20,1,0,0,0,273,274,5,66,0,0,274,275,5,79,0,0,275,
        276,5,79,0,0,276,277,5,76,0,0,277,22,1,0,0,0,278,279,5,83,0,0,279,
        280,5,84,0,0,280,281,5,82,0,0,281,282,5,73,0,0,282,283,5,78,0,0,
        283,284,5,71,0,0,284,24,1,0,0,0,285,286,5,68,0,0,286,287,5,73,0,
        0,287,288,5,78,0,0,288,289,5,84,0,0,289,26,1,0,0,0,290,291,5,66,
        0,0,291,292,5,89,0,0,292,293,5,84,0,0,293,294,5,69,0,0,294,28,1,
        0,0,0,295,296,5,87,0,0,296,297,5,79,0,0,297,298,5,82,0,0,298,299,
        5,68,0,0,299,30,1,0,0,0,300,301,5,68,0,0,301,302,5,87,0,0,302,303,
        5,79,0,0,303,304,5,82,0,0,304,305,5,68,0,0,305,32,1,0,0,0,306,307,
        5,83,0,0,307,308,5,73,0,0,308,309,5,78,0,0,309,310,5,84,0,0,310,
        34,1,0,0,0,311,312,5,85,0,0,312,313,5,83,0,0,313,314,5,73,0,0,314,
        315,5,78,0,0,315,316,5,84,0,0,316,36,1,0,0,0,317,318,5,85,0,0,318,
        319,5,73,0,0,319,320,5,78,0,0,320,321,5,84,0,0,321,38,1,0,0,0,322,
        323,5,85,0,0,323,324,5,68,0,0,324,325,5,73,0,0,325,326,5,78,0,0,
        326,327,5,84,0,0,327,40,1,0,0,0,328,329,5,76,0,0,329,330,5,73,0,
        0,330,331,5,78,0,0,331,332,5,84,0,0,332,42,1,0,0,0,333,334,5,85,
        0,0,334,335,5,76,0,0,335,336,5,73,0,0,336,337,5,78,0,0,337,338,5,
        84,0,0,338,44,1,0,0,0,339,340,5,76,0,0,340,341,5,82,0,0,341,342,
        5,69,0,0,342,343,5,65,0,0,343,344,5,76,0,0,344,46,1,0,0,0,345,346,
        5,84,0,0,346,347,5,73,0,0,347,348,5,77,0,0,348,349,5,69,0,0,349,
        48,1,0,0,0,350,351,5,68,0,0,351,352,5,65,0,0,352,353,5,84,0,0,353,
        354,5,69,0,0,354,50,1,0,0,0,355,356,5,84,0,0,356,357,5,73,0,0,357,
        358,5,77,0,0,358,359,5,69,0,0,359,360,5,95,0,0,360,361,5,79,0,0,
        361,362,5,70,0,0,362,363,5,95,0,0,363,364,5,68,0,0,364,365,5,65,
        0,0,365,366,5,89,0,0,366,52,1,0,0,0,367,368,5,68,0,0,368,369,5,65,
        0,0,369,370,5,84,0,0,370,371,5,69,0,0,371,372,5,95,0,0,372,373,5,
        65,0,0,373,374,5,78,0,0,374,375,5,68,0,0,375,376,5,95,0,0,376,377,
        5,84,0,0,377,378,5,73,0,0,378,379,5,77,0,0,379,380,5,69,0,0,380,
        54,1,0,0,0,381,382,5,46,0,0,382,56,1,0,0,0,383,384,5,61,0,0,384,
        385,5,62,0,0,385,58,1,0,0,0,386,387,5,42,0,0,387,60,1,0,0,0,388,
        389,5,47,0,0,389,62,1,0,0,0,390,391,5,43,0,0,391,64,1,0,0,0,392,
        393,5,45,0,0,393,66,1,0,0,0,394,395,5,61,0,0,395,68,1,0,0,0,396,
        397,5,60,0,0,397,70,1,0,0,0,398,399,5,62,0,0,399,72,1,0,0,0,400,
        401,5,60,0,0,401,402,5,61,0,0,402,74,1,0,0,0,403,404,5,62,0,0,404,
        405,5,61,0,0,405,76,1,0,0,0,406,407,5,60,0,0,407,408,5,62,0,0,408,
        78,1,0,0,0,409,410,5,123,0,0,410,80,1,0,0,0,411,412,5,125,0,0,412,
        82,1,0,0,0,413,414,5,80,0,0,414,415,5,82,0,0,415,416,5,79,0,0,416,
        417,5,71,0,0,417,418,5,82,0,0,418,419,5,65,0,0,419,420,5,77,0,0,
        420,84,1,0,0,0,421,422,5,69,0,0,422,423,5,78,0,0,423,424,5,68,0,
        0,424,425,5,95,0,0,425,426,5,80,0,0,426,427,5,82,0,0,427,428,5,79,
        0,0,428,429,5,71,0,0,429,430,5,82,0,0,430,431,5,65,0,0,431,432,5,
        77,0,0,432,86,1,0,0,0,433,434,5,70,0,0,434,435,5,85,0,0,435,436,
        5,78,0,0,436,437,5,67,0,0,437,438,5,84,0,0,438,439,5,73,0,0,439,
        440,5,79,0,0,440,441,5,78,0,0,441,442,5,95,0,0,442,443,5,66,0,0,
        443,444,5,76,0,0,444,445,5,79,0,0,445,446,5,67,0,0,446,447,5,75,
        0,0,447,88,1,0,0,0,448,449,5,69,0,0,449,450,5,78,0,0,450,451,5,68,
        0,0,451,452,5,95,0,0,452,453,5,70,0,0,453,454,5,85,0,0,454,455,5,
        78,0,0,455,456,5,67,0,0,456,457,5,84,0,0,457,458,5,73,0,0,458,459,
        5,79,0,0,459,460,5,78,0,0,460,461,5,95,0,0,461,462,5,66,0,0,462,
        463,5,76,0,0,463,464,5,79,0,0,464,465,5,67,0,0,465,466,5,75,0,0,
        466,90,1,0,0,0,467,468,5,70,0,0,468,469,5,85,0,0,469,470,5,78,0,
        0,470,471,5,67,0,0,471,472,5,84,0,0,472,473,5,73,0,0,473,474,5,79,
        0,0,474,475,5,78,0,0,475,92,1,0,0,0,476,477,5,69,0,0,477,478,5,78,
        0,0,478,479,5,68,0,0,479,480,5,95,0,0,480,481,5,70,0,0,481,482,5,
        85,0,0,482,483,5,78,0,0,483,484,5,67,0,0,484,485,5,84,0,0,485,486,
        5,73,0,0,486,487,5,79,0,0,487,488,5,78,0,0,488,94,1,0,0,0,489,490,
        5,80,0,0,490,491,5,82,0,0,491,492,5,79,0,0,492,493,5,80,0,0,493,
        494,5,69,0,0,494,495,5,82,0,0,495,496,5,84,0,0,496,497,5,89,0,0,
        497,96,1,0,0,0,498,499,5,69,0,0,499,500,5,78,0,0,500,501,5,68,0,
        0,501,502,5,95,0,0,502,503,5,80,0,0,503,504,5,82,0,0,504,505,5,79,
        0,0,505,506,5,80,0,0,506,507,5,69,0,0,507,508,5,82,0,0,508,509,5,
        84,0,0,509,510,5,89,0,0,510,98,1,0,0,0,511,512,5,73,0,0,512,513,
        5,77,0,0,513,514,5,80,0,0,514,515,5,76,0,0,515,516,5,69,0,0,516,
        517,5,77,0,0,517,518,5,69,0,0,518,519,5,78,0,0,519,520,5,84,0,0,
        520,521,5,83,0,0,521,100,1,0,0,0,522,523,5,69,0,0,523,524,5,88,0,
        0,524,525,5,84,0,0,525,526,5,69,0,0,526,527,5,78,0,0,527,528,5,68,
        0,0,528,529,5,83,0,0,529,102,1,0,0,0,530,531,5,71,0,0,531,532,5,
        69,0,0,532,533,5,84,0,0,533,104,1,0,0,0,534,535,5,69,0,0,535,536,
        5,78,0,0,536,537,5,68,0,0,537,538,5,95,0,0,538,539,5,71,0,0,539,
        540,5,69,0,0,540,541,5,84,0,0,541,106,1,0,0,0,542,543,5,83,0,0,543,
        544,5,69,0,0,544,545,5,84,0,0,545,108,1,0,0,0,546,547,5,69,0,0,547,
        548,5,78,0,0,548,549,5,68,0,0,549,550,5,95,0,0,550,551,5,83,0,0,
        551,552,5,69,0,0,552,553,5,84,0,0,553,110,1,0,0,0,554,555,5,86,0,
        0,555,556,5,65,0,0,556,557,5,82,0,0,557,112,1,0,0,0,558,559,5,86,
        0,0,559,560,5,65,0,0,560,561,5,82,0,0,561,562,5,95,0,0,562,563,5,
        73,0,0,563,564,5,78,0,0,564,565,5,80,0,0,565,566,5,85,0,0,566,567,
        5,84,0,0,567,114,1,0,0,0,568,569,5,86,0,0,569,570,5,65,0,0,570,571,
        5,82,0,0,571,572,5,95,0,0,572,573,5,79,0,0,573,574,5,85,0,0,574,
        575,5,84,0,0,575,576,5,80,0,0,576,577,5,85,0,0,577,578,5,84,0,0,
        578,116,1,0,0,0,579,580,5,86,0,0,580,581,5,65,0,0,581,582,5,82,0,
        0,582,583,5,95,0,0,583,584,5,73,0,0,584,585,5,78,0,0,585,586,5,95,
        0,0,586,587,5,79,0,0,587,588,5,85,0,0,588,589,5,84,0,0,589,118,1,
        0,0,0,590,591,5,86,0,0,591,592,5,65,0,0,592,593,5,82,0,0,593,594,
        5,95,0,0,594,595,5,84,0,0,595,596,5,69,0,0,596,597,5,77,0,0,597,
        598,5,80,0,0,598,120,1,0,0,0,599,600,5,86,0,0,600,601,5,65,0,0,601,
        602,5,82,0,0,602,603,5,95,0,0,603,604,5,69,0,0,604,605,5,88,0,0,
        605,606,5,84,0,0,606,607,5,69,0,0,607,608,5,82,0,0,608,609,5,78,
        0,0,609,610,5,65,0,0,610,611,5,76,0,0,611,122,1,0,0,0,612,613,5,
        86,0,0,613,614,5,65,0,0,614,615,5,82,0,0,615,616,5,95,0,0,616,617,
        5,71,0,0,617,618,5,76,0,0,618,619,5,79,0,0,619,620,5,66,0,0,620,
        621,5,65,0,0,621,622,5,76,0,0,622,124,1,0,0,0,623,624,5,86,0,0,624,
        625,5,65,0,0,625,626,5,82,0,0,626,627,5,95,0,0,627,628,5,73,0,0,
        628,629,5,78,0,0,629,630,5,83,0,0,630,631,5,84,0,0,631,126,1,0,0,
        0,632,633,5,86,0,0,633,634,5,65,0,0,634,635,5,82,0,0,635,636,5,95,
        0,0,636,637,5,83,0,0,637,638,5,84,0,0,638,639,5,65,0,0,639,640,5,
        84,0,0,640,128,1,0,0,0,641,642,5,69,0,0,642,643,5,78,0,0,643,644,
        5,68,0,0,644,645,5,95,0,0,645,646,5,86,0,0,646,647,5,65,0,0,647,
        648,5,82,0,0,648,130,1,0,0,0,649,650,5,73,0,0,650,651,5,70,0,0,651,
        132,1,0,0,0,652,653,5,84,0,0,653,654,5,72,0,0,654,655,5,69,0,0,655,
        656,5,78,0,0,656,134,1,0,0,0,657,658,5,69,0,0,658,659,5,76,0,0,659,
        660,5,83,0,0,660,661,5,73,0,0,661,662,5,70,0,0,662,136,1,0,0,0,663,
        664,5,69,0,0,664,665,5,76,0,0,665,666,5,83,0,0,666,667,5,69,0,0,
        667,138,1,0,0,0,668,669,5,69,0,0,669,670,5,78,0,0,670,671,5,68,0,
        0,671,672,5,95,0,0,672,673,5,73,0,0,673,674,5,70,0,0,674,140,1,0,
        0,0,675,676,5,67,0,0,676,677,5,65,0,0,677,678,5,83,0,0,678,679,5,
        69,0,0,679,142,1,0,0,0,680,681,5,65,0,0,681,682,5,82,0,0,682,683,
        5,82,0,0,683,684,5,65,0,0,684,685,5,89,0,0,685,144,1,0,0,0,686,687,
        5,79,0,0,687,688,5,70,0,0,688,146,1,0,0,0,689,690,5,69,0,0,690,691,
        5,78,0,0,691,692,5,68,0,0,692,693,5,95,0,0,693,694,5,67,0,0,694,
        695,5,65,0,0,695,696,5,83,0,0,696,697,5,69,0,0,697,148,1,0,0,0,698,
        699,5,87,0,0,699,700,5,72,0,0,700,701,5,73,0,0,701,702,5,76,0,0,
        702,703,5,69,0,0,703,150,1,0,0,0,704,705,5,68,0,0,705,706,5,79,0,
        0,706,152,1,0,0,0,707,708,5,69,0,0,708,709,5,78,0,0,709,710,5,68,
        0,0,710,711,5,95,0,0,711,712,5,87,0,0,712,713,5,72,0,0,713,714,5,
        73,0,0,714,715,5,76,0,0,715,716,5,69,0,0,716,154,1,0,0,0,717,718,
        5,82,0,0,718,719,5,69,0,0,719,720,5,80,0,0,720,721,5,69,0,0,721,
        722,5,65,0,0,722,723,5,84,0,0,723,156,1,0,0,0,724,725,5,85,0,0,725,
        726,5,78,0,0,726,727,5,84,0,0,727,728,5,73,0,0,728,729,5,76,0,0,
        729,158,1,0,0,0,730,731,5,69,0,0,731,732,5,78,0,0,732,733,5,68,0,
        0,733,734,5,95,0,0,734,735,5,82,0,0,735,736,5,69,0,0,736,737,5,80,
        0,0,737,738,5,69,0,0,738,739,5,65,0,0,739,740,5,84,0,0,740,160,1,
        0,0,0,741,742,5,70,0,0,742,743,5,79,0,0,743,744,5,82,0,0,744,162,
        1,0,0,0,745,746,5,84,0,0,746,747,5,79,0,0,747,164,1,0,0,0,748,749,
        5,66,0,0,749,750,5,89,0,0,750,166,1,0,0,0,751,752,5,69,0,0,752,753,
        5,78,0,0,753,754,5,68,0,0,754,755,5,95,0,0,755,756,5,70,0,0,756,
        757,5,79,0,0,757,758,5,82,0,0,758,168,1,0,0,0,759,760,5,82,0,0,760,
        761,5,69,0,0,761,762,5,84,0,0,762,763,5,85,0,0,763,764,5,82,0,0,
        764,765,5,78,0,0,765,170,1,0,0,0,766,767,5,69,0,0,767,768,5,88,0,
        0,768,769,5,73,0,0,769,770,5,84,0,0,770,172,1,0,0,0,771,772,5,67,
        0,0,772,773,5,79,0,0,773,774,5,78,0,0,774,775,5,84,0,0,775,776,5,
        73,0,0,776,777,5,78,0,0,777,778,5,85,0,0,778,779,5,69,0,0,779,174,
        1,0,0,0,780,781,5,65,0,0,781,782,5,78,0,0,782,783,5,68,0,0,783,176,
        1,0,0,0,784,785,5,79,0,0,785,786,5,82,0,0,786,178,1,0,0,0,787,788,
        5,88,0,0,788,789,5,79,0,0,789,790,5,82,0,0,790,180,1,0,0,0,791,792,
        5,77,0,0,792,793,5,69,0,0,793,794,5,84,0,0,794,795,5,72,0,0,795,
        796,5,79,0,0,796,797,5,68,0,0,797,182,1,0,0,0,798,799,5,69,0,0,799,
        800,5,78,0,0,800,801,5,68,0,0,801,802,5,95,0,0,802,803,5,77,0,0,
        803,804,5,69,0,0,804,805,5,84,0,0,805,806,5,72,0,0,806,807,5,79,
        0,0,807,808,5,68,0,0,808,184,1,0,0,0,809,810,5,73,0,0,810,811,5,
        78,0,0,811,812,5,84,0,0,812,813,5,69,0,0,813,814,5,82,0,0,814,815,
        5,70,0,0,815,816,5,65,0,0,816,817,5,67,0,0,817,818,5,69,0,0,818,
        186,1,0,0,0,819,820,5,69,0,0,820,821,5,78,0,0,821,822,5,68,0,0,822,
        823,5,95,0,0,823,824,5,73,0,0,824,825,5,78,0,0,825,826,5,84,0,0,
        826,827,5,69,0,0,827,828,5,82,0,0,828,829,5,70,0,0,829,830,5,65,
        0,0,830,831,5,67,0,0,831,832,5,69,0,0,832,188,1,0,0,0,833,834,5,
        83,0,0,834,835,5,84,0,0,835,836,5,82,0,0,836,837,5,85,0,0,837,838,
        5,67,0,0,838,839,5,84,0,0,839,190,1,0,0,0,840,841,5,69,0,0,841,842,
        5,78,0,0,842,843,5,68,0,0,843,844,5,95,0,0,844,845,5,83,0,0,845,
        846,5,84,0,0,846,847,5,82,0,0,847,848,5,85,0,0,848,849,5,67,0,0,
        849,850,5,84,0,0,850,192,1,0,0,0,851,852,5,69,0,0,852,853,5,78,0,
        0,853,854,5,85,0,0,854,855,5,77,0,0,855,194,1,0,0,0,856,857,5,69,
        0,0,857,858,5,78,0,0,858,859,5,68,0,0,859,860,5,95,0,0,860,861,5,
        69,0,0,861,862,5,78,0,0,862,863,5,85,0,0,863,864,5,77,0,0,864,196,
        1,0,0,0,865,866,5,65,0,0,866,867,5,66,0,0,867,868,5,83,0,0,868,869,
        5,84,0,0,869,870,5,82,0,0,870,871,5,65,0,0,871,872,5,67,0,0,872,
        873,5,84,0,0,873,198,1,0,0,0,874,875,5,70,0,0,875,876,5,73,0,0,876,
        877,5,78,0,0,877,878,5,65,0,0,878,879,5,76,0,0,879,200,1,0,0,0,880,
        881,5,67,0,0,881,882,5,79,0,0,882,883,5,78,0,0,883,884,5,83,0,0,
        884,885,5,84,0,0,885,886,5,65,0,0,886,887,5,78,0,0,887,888,5,84,
        0,0,888,202,1,0,0,0,889,890,5,80,0,0,890,891,5,85,0,0,891,892,5,
        66,0,0,892,893,5,76,0,0,893,894,5,73,0,0,894,895,5,67,0,0,895,204,
        1,0,0,0,896,897,5,80,0,0,897,898,5,82,0,0,898,899,5,73,0,0,899,900,
        5,86,0,0,900,901,5,65,0,0,901,902,5,84,0,0,902,903,5,69,0,0,903,
        206,1,0,0,0,904,905,5,80,0,0,905,906,5,82,0,0,906,907,5,79,0,0,907,
        908,5,84,0,0,908,909,5,69,0,0,909,910,5,67,0,0,910,911,5,84,0,0,
        911,912,5,69,0,0,912,913,5,68,0,0,913,208,1,0,0,0,914,915,5,73,0,
        0,915,916,5,78,0,0,916,917,5,84,0,0,917,918,5,69,0,0,918,919,5,82,
        0,0,919,920,5,78,0,0,920,921,5,65,0,0,921,922,5,76,0,0,922,210,1,
        0,0,0,923,924,5,77,0,0,924,925,5,79,0,0,925,926,5,68,0,0,926,212,
        1,0,0,0,927,928,5,84,0,0,928,929,5,89,0,0,929,930,5,80,0,0,930,931,
        5,69,0,0,931,214,1,0,0,0,932,933,5,69,0,0,933,934,5,78,0,0,934,935,
        5,68,0,0,935,936,5,95,0,0,936,937,5,84,0,0,937,938,5,89,0,0,938,
        939,5,80,0,0,939,940,5,69,0,0,940,216,1,0,0,0,941,942,5,94,0,0,942,
        218,1,0,0,0,943,944,5,82,0,0,944,945,5,69,0,0,945,946,5,70,0,0,946,
        947,5,69,0,0,947,948,5,82,0,0,948,949,5,69,0,0,949,950,5,78,0,0,
        950,951,5,67,0,0,951,952,5,69,0,0,952,953,5,32,0,0,953,954,5,84,
        0,0,954,955,5,79,0,0,955,220,1,0,0,0,956,957,5,80,0,0,957,958,5,
        79,0,0,958,959,5,73,0,0,959,960,5,78,0,0,960,961,5,84,0,0,961,962,
        5,69,0,0,962,963,5,82,0,0,963,964,5,32,0,0,964,965,5,84,0,0,965,
        966,5,79,0,0,966,222,1,0,0,0,967,968,5,40,0,0,968,224,1,0,0,0,969,
        970,5,41,0,0,970,226,1,0,0,0,971,972,5,84,0,0,972,973,5,82,0,0,973,
        974,5,85,0,0,974,981,5,69,0,0,975,976,5,70,0,0,976,977,5,65,0,0,
        977,978,5,76,0,0,978,979,5,83,0,0,979,981,5,69,0,0,980,971,1,0,0,
        0,980,975,1,0,0,0,981,228,1,0,0,0,982,984,5,45,0,0,983,982,1,0,0,
        0,983,984,1,0,0,0,984,1119,1,0,0,0,985,989,7,0,0,0,986,988,7,1,0,
        0,987,986,1,0,0,0,988,991,1,0,0,0,989,987,1,0,0,0,989,990,1,0,0,
        0,990,992,1,0,0,0,991,989,1,0,0,0,992,1042,5,35,0,0,993,995,7,2,
        0,0,994,993,1,0,0,0,995,996,1,0,0,0,996,994,1,0,0,0,996,997,1,0,
        0,0,997,1004,1,0,0,0,998,1000,5,46,0,0,999,1001,7,2,0,0,1000,999,
        1,0,0,0,1001,1002,1,0,0,0,1002,1000,1,0,0,0,1002,1003,1,0,0,0,1003,
        1005,1,0,0,0,1004,998,1,0,0,0,1004,1005,1,0,0,0,1005,1015,1,0,0,
        0,1006,1008,7,3,0,0,1007,1009,7,4,0,0,1008,1007,1,0,0,0,1008,1009,
        1,0,0,0,1009,1011,1,0,0,0,1010,1012,7,2,0,0,1011,1010,1,0,0,0,1012,
        1013,1,0,0,0,1013,1011,1,0,0,0,1013,1014,1,0,0,0,1014,1016,1,0,0,
        0,1015,1006,1,0,0,0,1015,1016,1,0,0,0,1016,1043,1,0,0,0,1017,1018,
        5,50,0,0,1018,1019,5,35,0,0,1019,1021,1,0,0,0,1020,1022,7,5,0,0,
        1021,1020,1,0,0,0,1022,1023,1,0,0,0,1023,1021,1,0,0,0,1023,1024,
        1,0,0,0,1024,1043,1,0,0,0,1025,1026,5,56,0,0,1026,1027,5,35,0,0,
        1027,1029,1,0,0,0,1028,1030,7,6,0,0,1029,1028,1,0,0,0,1030,1031,
        1,0,0,0,1031,1029,1,0,0,0,1031,1032,1,0,0,0,1032,1043,1,0,0,0,1033,
        1034,5,49,0,0,1034,1035,5,54,0,0,1035,1036,5,35,0,0,1036,1038,1,
        0,0,0,1037,1039,7,7,0,0,1038,1037,1,0,0,0,1039,1040,1,0,0,0,1040,
        1038,1,0,0,0,1040,1041,1,0,0,0,1041,1043,1,0,0,0,1042,994,1,0,0,
        0,1042,1017,1,0,0,0,1042,1025,1,0,0,0,1042,1033,1,0,0,0,1043,1120,
        1,0,0,0,1044,1046,7,2,0,0,1045,1044,1,0,0,0,1046,1047,1,0,0,0,1047,
        1045,1,0,0,0,1047,1048,1,0,0,0,1048,1055,1,0,0,0,1049,1051,5,46,
        0,0,1050,1052,7,2,0,0,1051,1050,1,0,0,0,1052,1053,1,0,0,0,1053,1051,
        1,0,0,0,1053,1054,1,0,0,0,1054,1056,1,0,0,0,1055,1049,1,0,0,0,1055,
        1056,1,0,0,0,1056,1066,1,0,0,0,1057,1059,7,3,0,0,1058,1060,7,4,0,
        0,1059,1058,1,0,0,0,1059,1060,1,0,0,0,1060,1062,1,0,0,0,1061,1063,
        7,2,0,0,1062,1061,1,0,0,0,1063,1064,1,0,0,0,1064,1062,1,0,0,0,1064,
        1065,1,0,0,0,1065,1067,1,0,0,0,1066,1057,1,0,0,0,1066,1067,1,0,0,
        0,1067,1094,1,0,0,0,1068,1069,5,50,0,0,1069,1070,5,35,0,0,1070,1072,
        1,0,0,0,1071,1073,7,5,0,0,1072,1071,1,0,0,0,1073,1074,1,0,0,0,1074,
        1072,1,0,0,0,1074,1075,1,0,0,0,1075,1094,1,0,0,0,1076,1077,5,56,
        0,0,1077,1078,5,35,0,0,1078,1080,1,0,0,0,1079,1081,7,6,0,0,1080,
        1079,1,0,0,0,1081,1082,1,0,0,0,1082,1080,1,0,0,0,1082,1083,1,0,0,
        0,1083,1094,1,0,0,0,1084,1085,5,49,0,0,1085,1086,5,54,0,0,1086,1087,
        5,35,0,0,1087,1089,1,0,0,0,1088,1090,7,7,0,0,1089,1088,1,0,0,0,1090,
        1091,1,0,0,0,1091,1089,1,0,0,0,1091,1092,1,0,0,0,1092,1094,1,0,0,
        0,1093,1045,1,0,0,0,1093,1068,1,0,0,0,1093,1076,1,0,0,0,1093,1084,
        1,0,0,0,1094,1120,1,0,0,0,1095,1097,7,2,0,0,1096,1095,1,0,0,0,1097,
        1098,1,0,0,0,1098,1096,1,0,0,0,1098,1099,1,0,0,0,1099,1106,1,0,0,
        0,1100,1102,5,46,0,0,1101,1103,7,2,0,0,1102,1101,1,0,0,0,1103,1104,
        1,0,0,0,1104,1102,1,0,0,0,1104,1105,1,0,0,0,1105,1107,1,0,0,0,1106,
        1100,1,0,0,0,1106,1107,1,0,0,0,1107,1117,1,0,0,0,1108,1110,7,3,0,
        0,1109,1111,7,4,0,0,1110,1109,1,0,0,0,1110,1111,1,0,0,0,1111,1113,
        1,0,0,0,1112,1114,7,2,0,0,1113,1112,1,0,0,0,1114,1115,1,0,0,0,1115,
        1113,1,0,0,0,1115,1116,1,0,0,0,1116,1118,1,0,0,0,1117,1108,1,0,0,
        0,1117,1118,1,0,0,0,1118,1120,1,0,0,0,1119,985,1,0,0,0,1119,1093,
        1,0,0,0,1119,1096,1,0,0,0,1120,230,1,0,0,0,1121,1122,5,84,0,0,1122,
        1123,5,35,0,0,1123,1125,1,0,0,0,1124,1126,7,2,0,0,1125,1124,1,0,
        0,0,1126,1127,1,0,0,0,1127,1125,1,0,0,0,1127,1128,1,0,0,0,1128,1132,
        1,0,0,0,1129,1130,5,77,0,0,1130,1133,5,83,0,0,1131,1133,7,8,0,0,
        1132,1129,1,0,0,0,1132,1131,1,0,0,0,1133,232,1,0,0,0,1134,1138,7,
        0,0,0,1135,1137,7,1,0,0,1136,1135,1,0,0,0,1137,1140,1,0,0,0,1138,
        1136,1,0,0,0,1138,1139,1,0,0,0,1139,234,1,0,0,0,1140,1138,1,0,0,
        0,1141,1145,5,34,0,0,1142,1144,8,9,0,0,1143,1142,1,0,0,0,1144,1147,
        1,0,0,0,1145,1143,1,0,0,0,1145,1146,1,0,0,0,1146,1148,1,0,0,0,1147,
        1145,1,0,0,0,1148,1158,5,34,0,0,1149,1153,5,39,0,0,1150,1152,8,10,
        0,0,1151,1150,1,0,0,0,1152,1155,1,0,0,0,1153,1151,1,0,0,0,1153,1154,
        1,0,0,0,1154,1156,1,0,0,0,1155,1153,1,0,0,0,1156,1158,5,39,0,0,1157,
        1141,1,0,0,0,1157,1149,1,0,0,0,1158,236,1,0,0,0,1159,1161,7,11,0,
        0,1160,1159,1,0,0,0,1161,1162,1,0,0,0,1162,1160,1,0,0,0,1162,1163,
        1,0,0,0,1163,1164,1,0,0,0,1164,1165,6,118,0,0,1165,238,1,0,0,0,1166,
        1167,5,47,0,0,1167,1168,5,47,0,0,1168,1172,1,0,0,0,1169,1171,8,12,
        0,0,1170,1169,1,0,0,0,1171,1174,1,0,0,0,1172,1170,1,0,0,0,1172,1173,
        1,0,0,0,1173,1175,1,0,0,0,1174,1172,1,0,0,0,1175,1176,6,119,1,0,
        1176,240,1,0,0,0,1177,1178,5,40,0,0,1178,1179,5,42,0,0,1179,1183,
        1,0,0,0,1180,1182,9,0,0,0,1181,1180,1,0,0,0,1182,1185,1,0,0,0,1183,
        1184,1,0,0,0,1183,1181,1,0,0,0,1184,1186,1,0,0,0,1185,1183,1,0,0,
        0,1186,1187,5,42,0,0,1187,1188,5,41,0,0,1188,1189,1,0,0,0,1189,1190,
        6,120,1,0,1190,242,1,0,0,0,40,0,980,983,989,996,1002,1004,1008,1013,
        1015,1023,1031,1040,1042,1047,1053,1055,1059,1064,1066,1074,1082,
        1091,1093,1098,1104,1106,1110,1115,1117,1119,1127,1132,1138,1145,
        1153,1157,1162,1172,1183,2,6,0,0,0,1,0
    ];

    private static __ATN: antlr.ATN;
    public static get _ATN(): antlr.ATN {
        if (!StructuredTextLexer.__ATN) {
            StructuredTextLexer.__ATN = new antlr.ATNDeserializer().deserialize(StructuredTextLexer._serializedATN);
        }

        return StructuredTextLexer.__ATN;
    }


    private static readonly vocabulary = new antlr.Vocabulary(StructuredTextLexer.literalNames, StructuredTextLexer.symbolicNames, []);

    public override get vocabulary(): antlr.Vocabulary {
        return StructuredTextLexer.vocabulary;
    }

    private static readonly decisionsToDFA = StructuredTextLexer._ATN.decisionToState.map( (ds: antlr.DecisionState, index: number) => new antlr.DFA(ds, index) );
}