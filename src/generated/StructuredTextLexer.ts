// Generated from /home/vincent/Documents/Git/GitHub/vscode-twincat-st/src/StructuredText.g4 by ANTLR 4.13.1

import * as antlr from "antlr4ng";
import { Token } from "antlr4ng";


export class StructuredTextLexer extends antlr.Lexer {
    public static readonly T__0 = 1;
    public static readonly T__1 = 2;
    public static readonly T__2 = 3;
    public static readonly T__3 = 4;
    public static readonly T__4 = 5;
    public static readonly T__5 = 6;
    public static readonly T__6 = 7;
    public static readonly T__7 = 8;
    public static readonly T__8 = 9;
    public static readonly T__9 = 10;
    public static readonly T__10 = 11;
    public static readonly T__11 = 12;
    public static readonly T__12 = 13;
    public static readonly T__13 = 14;
    public static readonly T__14 = 15;
    public static readonly T__15 = 16;
    public static readonly T__16 = 17;
    public static readonly T__17 = 18;
    public static readonly T__18 = 19;
    public static readonly T__19 = 20;
    public static readonly T__20 = 21;
    public static readonly T__21 = 22;
    public static readonly T__22 = 23;
    public static readonly T__23 = 24;
    public static readonly T__24 = 25;
    public static readonly T__25 = 26;
    public static readonly T__26 = 27;
    public static readonly T__27 = 28;
    public static readonly T__28 = 29;
    public static readonly T__29 = 30;
    public static readonly T__30 = 31;
    public static readonly T__31 = 32;
    public static readonly T__32 = 33;
    public static readonly T__33 = 34;
    public static readonly T__34 = 35;
    public static readonly T__35 = 36;
    public static readonly T__36 = 37;
    public static readonly T__37 = 38;
    public static readonly T__38 = 39;
    public static readonly T__39 = 40;
    public static readonly T__40 = 41;
    public static readonly PROGRAM = 42;
    public static readonly END_PROGRAM = 43;
    public static readonly FUNCTION_BLOCK = 44;
    public static readonly END_FUNCTION_BLOCK = 45;
    public static readonly FUNCTION = 46;
    public static readonly END_FUNCTION = 47;
    public static readonly PROPERTY = 48;
    public static readonly END_PROPERTY = 49;
    public static readonly IMPLEMENTS = 50;
    public static readonly EXTENDS = 51;
    public static readonly GET = 52;
    public static readonly END_GET = 53;
    public static readonly SET = 54;
    public static readonly END_SET = 55;
    public static readonly VAR = 56;
    public static readonly VAR_INPUT = 57;
    public static readonly VAR_OUTPUT = 58;
    public static readonly VAR_IN_OUT = 59;
    public static readonly VAR_TEMP = 60;
    public static readonly VAR_EXTERNAL = 61;
    public static readonly VAR_GLOBAL = 62;
    public static readonly VAR_INST = 63;
    public static readonly END_VAR = 64;
    public static readonly IF = 65;
    public static readonly THEN = 66;
    public static readonly ELSIF = 67;
    public static readonly ELSE = 68;
    public static readonly END_IF = 69;
    public static readonly CASE = 70;
    public static readonly ARRAY = 71;
    public static readonly OF = 72;
    public static readonly END_CASE = 73;
    public static readonly WHILE = 74;
    public static readonly DO = 75;
    public static readonly END_WHILE = 76;
    public static readonly REPEAT = 77;
    public static readonly UNTIL = 78;
    public static readonly END_REPEAT = 79;
    public static readonly FOR = 80;
    public static readonly TO = 81;
    public static readonly BY = 82;
    public static readonly END_FOR = 83;
    public static readonly RETURN = 84;
    public static readonly EXIT = 85;
    public static readonly CONTINUE = 86;
    public static readonly AND = 87;
    public static readonly OR = 88;
    public static readonly XOR = 89;
    public static readonly METHOD = 90;
    public static readonly END_METHOD = 91;
    public static readonly INTERFACE = 92;
    public static readonly END_INTERFACE = 93;
    public static readonly CLASS = 94;
    public static readonly END_CLASS = 95;
    public static readonly STRUCT = 96;
    public static readonly END_STRUCT = 97;
    public static readonly ENUM = 98;
    public static readonly END_ENUM = 99;
    public static readonly NAMESPACE = 100;
    public static readonly END_NAMESPACE = 101;
    public static readonly TYPEDEF = 102;
    public static readonly ABSTRACT = 103;
    public static readonly FINAL = 104;
    public static readonly SEALED = 105;
    public static readonly OVERRIDE = 106;
    public static readonly STATIC = 107;
    public static readonly CONSTANT = 108;
    public static readonly READONLY = 109;
    public static readonly PUBLIC = 110;
    public static readonly PRIVATE = 111;
    public static readonly PROTECTED = 112;
    public static readonly INTERNAL = 113;
    public static readonly REFERENCE_TO = 114;
    public static readonly MOD = 115;
    public static readonly BOOL = 116;
    public static readonly ID = 117;
    public static readonly NUMBER = 118;
    public static readonly STRING_LITERAL = 119;
    public static readonly WS = 120;
    public static readonly COMMENT = 121;

    public static readonly channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    ];

    public static readonly literalNames = [
        null, "':'", "'='", "';'", "','", "':='", "'['", "'..'", "']'", 
        "'INT'", "'REAL'", "'BOOL'", "'STRING'", "'DINT'", "'BYTE'", "'WORD'", 
        "'DWORD'", "'SINT'", "'USINT'", "'UINT'", "'UDINT'", "'LINT'", "'ULINT'", 
        "'LREAL'", "'TIME'", "'DATE'", "'TIME_OF_DAY'", "'DATE_AND_TIME'", 
        "'('", "')'", "'=>'", "'*'", "'/'", "'+'", "'-'", "'<'", "'>'", 
        "'<='", "'>='", "'<>'", "'{'", "'}'", "'PROGRAM'", "'END_PROGRAM'", 
        "'FUNCTION_BLOCK'", "'END_FUNCTION_BLOCK'", "'FUNCTION'", "'END_FUNCTION'", 
        "'PROPERTY'", "'END_PROPERTY'", "'IMPLEMENTS'", "'EXTENDS'", "'GET'", 
        "'END_GET'", "'SET'", "'END_SET'", "'VAR'", "'VAR_INPUT'", "'VAR_OUTPUT'", 
        "'VAR_IN_OUT'", "'VAR_TEMP'", "'VAR_EXTERNAL'", "'VAR_GLOBAL'", 
        "'VAR_INST'", "'END_VAR'", "'IF'", "'THEN'", "'ELSIF'", "'ELSE'", 
        "'END_IF'", "'CASE'", "'ARRAY'", "'OF'", "'END_CASE'", "'WHILE'", 
        "'DO'", "'END_WHILE'", "'REPEAT'", "'UNTIL'", "'END_REPEAT'", "'FOR'", 
        "'TO'", "'BY'", "'END_FOR'", "'RETURN'", "'EXIT'", "'CONTINUE'", 
        "'AND'", "'OR'", "'XOR'", "'METHOD'", "'END_METHOD'", "'INTERFACE'", 
        "'END_INTERFACE'", "'CLASS'", "'END_CLASS'", "'STRUCT'", "'END_STRUCT'", 
        "'ENUM'", "'END_ENUM'", "'NAMESPACE'", "'END_NAMESPACE'", "'TYPEDEF'", 
        "'ABSTRACT'", "'FINAL'", "'SEALED'", "'OVERRIDE'", "'STATIC'", "'CONSTANT'", 
        "'READONLY'", "'PUBLIC'", "'PRIVATE'", "'PROTECTED'", "'INTERNAL'", 
        "'REFERENCE TO'", "'MOD'"
    ];

    public static readonly symbolicNames = [
        null, null, null, null, null, null, null, null, null, null, null, 
        null, null, null, null, null, null, null, null, null, null, null, 
        null, null, null, null, null, null, null, null, null, null, null, 
        null, null, null, null, null, null, null, null, null, "PROGRAM", 
        "END_PROGRAM", "FUNCTION_BLOCK", "END_FUNCTION_BLOCK", "FUNCTION", 
        "END_FUNCTION", "PROPERTY", "END_PROPERTY", "IMPLEMENTS", "EXTENDS", 
        "GET", "END_GET", "SET", "END_SET", "VAR", "VAR_INPUT", "VAR_OUTPUT", 
        "VAR_IN_OUT", "VAR_TEMP", "VAR_EXTERNAL", "VAR_GLOBAL", "VAR_INST", 
        "END_VAR", "IF", "THEN", "ELSIF", "ELSE", "END_IF", "CASE", "ARRAY", 
        "OF", "END_CASE", "WHILE", "DO", "END_WHILE", "REPEAT", "UNTIL", 
        "END_REPEAT", "FOR", "TO", "BY", "END_FOR", "RETURN", "EXIT", "CONTINUE", 
        "AND", "OR", "XOR", "METHOD", "END_METHOD", "INTERFACE", "END_INTERFACE", 
        "CLASS", "END_CLASS", "STRUCT", "END_STRUCT", "ENUM", "END_ENUM", 
        "NAMESPACE", "END_NAMESPACE", "TYPEDEF", "ABSTRACT", "FINAL", "SEALED", 
        "OVERRIDE", "STATIC", "CONSTANT", "READONLY", "PUBLIC", "PRIVATE", 
        "PROTECTED", "INTERNAL", "REFERENCE_TO", "MOD", "BOOL", "ID", "NUMBER", 
        "STRING_LITERAL", "WS", "COMMENT"
    ];

    public static readonly modeNames = [
        "DEFAULT_MODE",
    ];

    public static readonly ruleNames = [
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", 
        "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", 
        "T__16", "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", 
        "T__24", "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
        "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", 
        "T__40", "PROGRAM", "END_PROGRAM", "FUNCTION_BLOCK", "END_FUNCTION_BLOCK", 
        "FUNCTION", "END_FUNCTION", "PROPERTY", "END_PROPERTY", "IMPLEMENTS", 
        "EXTENDS", "GET", "END_GET", "SET", "END_SET", "VAR", "VAR_INPUT", 
        "VAR_OUTPUT", "VAR_IN_OUT", "VAR_TEMP", "VAR_EXTERNAL", "VAR_GLOBAL", 
        "VAR_INST", "END_VAR", "IF", "THEN", "ELSIF", "ELSE", "END_IF", 
        "CASE", "ARRAY", "OF", "END_CASE", "WHILE", "DO", "END_WHILE", "REPEAT", 
        "UNTIL", "END_REPEAT", "FOR", "TO", "BY", "END_FOR", "RETURN", "EXIT", 
        "CONTINUE", "AND", "OR", "XOR", "METHOD", "END_METHOD", "INTERFACE", 
        "END_INTERFACE", "CLASS", "END_CLASS", "STRUCT", "END_STRUCT", "ENUM", 
        "END_ENUM", "NAMESPACE", "END_NAMESPACE", "TYPEDEF", "ABSTRACT", 
        "FINAL", "SEALED", "OVERRIDE", "STATIC", "CONSTANT", "READONLY", 
        "PUBLIC", "PRIVATE", "PROTECTED", "INTERNAL", "REFERENCE_TO", "MOD", 
        "BOOL", "ID", "NUMBER", "STRING_LITERAL", "WS", "COMMENT",
    ];


    public constructor(input: antlr.CharStream) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, StructuredTextLexer._ATN, StructuredTextLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }

    public get grammarFileName(): string { return "StructuredText.g4"; }

    public get literalNames(): (string | null)[] { return StructuredTextLexer.literalNames; }
    public get symbolicNames(): (string | null)[] { return StructuredTextLexer.symbolicNames; }
    public get ruleNames(): string[] { return StructuredTextLexer.ruleNames; }

    public get serializedATN(): number[] { return StructuredTextLexer._serializedATN; }

    public get channelNames(): string[] { return StructuredTextLexer.channelNames; }

    public get modeNames(): string[] { return StructuredTextLexer.modeNames; }

    public static readonly _serializedATN: number[] = [
        4,0,121,1066,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,
        5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,
        2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,
        7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,
        2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,
        7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
        2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
        7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,
        2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,
        7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,
        7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,
        2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,
        7,114,2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,
        2,120,7,120,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,5,1,5,
        1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,
        1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
        1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,
        1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
        1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
        1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,
        1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,
        1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
        1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,31,1,31,
        1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,36,1,37,1,37,
        1,37,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,41,1,41,
        1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
        1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
        1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,
        1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,
        1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
        1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,
        1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
        1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
        1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,
        1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,54,1,54,
        1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,1,56,
        1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,
        1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,
        1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,60,
        1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,
        1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,
        1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
        1,63,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,
        1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,
        1,68,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,71,
        1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,73,1,73,
        1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,75,
        1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,
        1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,
        1,78,1,78,1,79,1,79,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,1,82,
        1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,83,1,83,1,83,
        1,83,1,84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,85,
        1,85,1,85,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,88,1,88,1,88,1,88,
        1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,90,
        1,90,1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,91,1,91,1,91,1,91,
        1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,
        1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,94,
        1,94,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,95,1,95,
        1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,97,1,97,
        1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,99,
        1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,100,1,100,1,100,1,
        100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,
        1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,102,1,102,1,102,
        1,102,1,102,1,102,1,102,1,102,1,102,1,103,1,103,1,103,1,103,1,103,
        1,103,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,105,1,105,1,105,
        1,105,1,105,1,105,1,105,1,105,1,105,1,106,1,106,1,106,1,106,1,106,
        1,106,1,106,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,
        1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,109,1,109,
        1,109,1,109,1,109,1,109,1,109,1,110,1,110,1,110,1,110,1,110,1,110,
        1,110,1,110,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,
        1,111,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,113,
        1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,1,113,
        1,113,1,114,1,114,1,114,1,114,1,115,1,115,1,115,1,115,1,115,1,115,
        1,115,1,115,1,115,3,115,1018,8,115,1,116,1,116,5,116,1022,8,116,
        10,116,12,116,1025,9,116,1,117,4,117,1028,8,117,11,117,12,117,1029,
        1,117,1,117,4,117,1034,8,117,11,117,12,117,1035,3,117,1038,8,117,
        1,118,1,118,5,118,1042,8,118,10,118,12,118,1045,9,118,1,118,1,118,
        1,119,4,119,1050,8,119,11,119,12,119,1051,1,119,1,119,1,120,1,120,
        1,120,1,120,5,120,1060,8,120,10,120,12,120,1063,9,120,1,120,1,120,
        0,0,121,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
        25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,
        47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,
        69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
        91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,
        111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,
        65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,
        149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,
        84,169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,
        187,94,189,95,191,96,193,97,195,98,197,99,199,100,201,101,203,102,
        205,103,207,104,209,105,211,106,213,107,215,108,217,109,219,110,
        221,111,223,112,225,113,227,114,229,115,231,116,233,117,235,118,
        237,119,239,120,241,121,1,0,6,3,0,65,90,95,95,97,122,4,0,48,57,65,
        90,95,95,97,122,1,0,48,57,3,0,10,10,13,13,34,34,3,0,9,10,13,13,32,
        32,2,0,10,10,13,13,1073,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
        1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
        1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
        1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
        1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
        1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
        1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
        1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,
        107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,
        0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,
        1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,
        0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,
        0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,
        153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,
        0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,
        1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,
        0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,
        0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,
        199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,
        0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,0,217,
        1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,0,225,1,0,0,0,
        0,227,1,0,0,0,0,229,1,0,0,0,0,231,1,0,0,0,0,233,1,0,0,0,0,235,1,
        0,0,0,0,237,1,0,0,0,0,239,1,0,0,0,0,241,1,0,0,0,1,243,1,0,0,0,3,
        245,1,0,0,0,5,247,1,0,0,0,7,249,1,0,0,0,9,251,1,0,0,0,11,254,1,0,
        0,0,13,256,1,0,0,0,15,259,1,0,0,0,17,261,1,0,0,0,19,265,1,0,0,0,
        21,270,1,0,0,0,23,275,1,0,0,0,25,282,1,0,0,0,27,287,1,0,0,0,29,292,
        1,0,0,0,31,297,1,0,0,0,33,303,1,0,0,0,35,308,1,0,0,0,37,314,1,0,
        0,0,39,319,1,0,0,0,41,325,1,0,0,0,43,330,1,0,0,0,45,336,1,0,0,0,
        47,342,1,0,0,0,49,347,1,0,0,0,51,352,1,0,0,0,53,364,1,0,0,0,55,378,
        1,0,0,0,57,380,1,0,0,0,59,382,1,0,0,0,61,385,1,0,0,0,63,387,1,0,
        0,0,65,389,1,0,0,0,67,391,1,0,0,0,69,393,1,0,0,0,71,395,1,0,0,0,
        73,397,1,0,0,0,75,400,1,0,0,0,77,403,1,0,0,0,79,406,1,0,0,0,81,408,
        1,0,0,0,83,410,1,0,0,0,85,418,1,0,0,0,87,430,1,0,0,0,89,445,1,0,
        0,0,91,464,1,0,0,0,93,473,1,0,0,0,95,486,1,0,0,0,97,495,1,0,0,0,
        99,508,1,0,0,0,101,519,1,0,0,0,103,527,1,0,0,0,105,531,1,0,0,0,107,
        539,1,0,0,0,109,543,1,0,0,0,111,551,1,0,0,0,113,555,1,0,0,0,115,
        565,1,0,0,0,117,576,1,0,0,0,119,587,1,0,0,0,121,596,1,0,0,0,123,
        609,1,0,0,0,125,620,1,0,0,0,127,629,1,0,0,0,129,637,1,0,0,0,131,
        640,1,0,0,0,133,645,1,0,0,0,135,651,1,0,0,0,137,656,1,0,0,0,139,
        663,1,0,0,0,141,668,1,0,0,0,143,674,1,0,0,0,145,677,1,0,0,0,147,
        686,1,0,0,0,149,692,1,0,0,0,151,695,1,0,0,0,153,705,1,0,0,0,155,
        712,1,0,0,0,157,718,1,0,0,0,159,729,1,0,0,0,161,733,1,0,0,0,163,
        736,1,0,0,0,165,739,1,0,0,0,167,747,1,0,0,0,169,754,1,0,0,0,171,
        759,1,0,0,0,173,768,1,0,0,0,175,772,1,0,0,0,177,775,1,0,0,0,179,
        779,1,0,0,0,181,786,1,0,0,0,183,797,1,0,0,0,185,807,1,0,0,0,187,
        821,1,0,0,0,189,827,1,0,0,0,191,837,1,0,0,0,193,844,1,0,0,0,195,
        855,1,0,0,0,197,860,1,0,0,0,199,869,1,0,0,0,201,879,1,0,0,0,203,
        893,1,0,0,0,205,901,1,0,0,0,207,910,1,0,0,0,209,916,1,0,0,0,211,
        923,1,0,0,0,213,932,1,0,0,0,215,939,1,0,0,0,217,948,1,0,0,0,219,
        957,1,0,0,0,221,964,1,0,0,0,223,972,1,0,0,0,225,982,1,0,0,0,227,
        991,1,0,0,0,229,1004,1,0,0,0,231,1017,1,0,0,0,233,1019,1,0,0,0,235,
        1027,1,0,0,0,237,1039,1,0,0,0,239,1049,1,0,0,0,241,1055,1,0,0,0,
        243,244,5,58,0,0,244,2,1,0,0,0,245,246,5,61,0,0,246,4,1,0,0,0,247,
        248,5,59,0,0,248,6,1,0,0,0,249,250,5,44,0,0,250,8,1,0,0,0,251,252,
        5,58,0,0,252,253,5,61,0,0,253,10,1,0,0,0,254,255,5,91,0,0,255,12,
        1,0,0,0,256,257,5,46,0,0,257,258,5,46,0,0,258,14,1,0,0,0,259,260,
        5,93,0,0,260,16,1,0,0,0,261,262,5,73,0,0,262,263,5,78,0,0,263,264,
        5,84,0,0,264,18,1,0,0,0,265,266,5,82,0,0,266,267,5,69,0,0,267,268,
        5,65,0,0,268,269,5,76,0,0,269,20,1,0,0,0,270,271,5,66,0,0,271,272,
        5,79,0,0,272,273,5,79,0,0,273,274,5,76,0,0,274,22,1,0,0,0,275,276,
        5,83,0,0,276,277,5,84,0,0,277,278,5,82,0,0,278,279,5,73,0,0,279,
        280,5,78,0,0,280,281,5,71,0,0,281,24,1,0,0,0,282,283,5,68,0,0,283,
        284,5,73,0,0,284,285,5,78,0,0,285,286,5,84,0,0,286,26,1,0,0,0,287,
        288,5,66,0,0,288,289,5,89,0,0,289,290,5,84,0,0,290,291,5,69,0,0,
        291,28,1,0,0,0,292,293,5,87,0,0,293,294,5,79,0,0,294,295,5,82,0,
        0,295,296,5,68,0,0,296,30,1,0,0,0,297,298,5,68,0,0,298,299,5,87,
        0,0,299,300,5,79,0,0,300,301,5,82,0,0,301,302,5,68,0,0,302,32,1,
        0,0,0,303,304,5,83,0,0,304,305,5,73,0,0,305,306,5,78,0,0,306,307,
        5,84,0,0,307,34,1,0,0,0,308,309,5,85,0,0,309,310,5,83,0,0,310,311,
        5,73,0,0,311,312,5,78,0,0,312,313,5,84,0,0,313,36,1,0,0,0,314,315,
        5,85,0,0,315,316,5,73,0,0,316,317,5,78,0,0,317,318,5,84,0,0,318,
        38,1,0,0,0,319,320,5,85,0,0,320,321,5,68,0,0,321,322,5,73,0,0,322,
        323,5,78,0,0,323,324,5,84,0,0,324,40,1,0,0,0,325,326,5,76,0,0,326,
        327,5,73,0,0,327,328,5,78,0,0,328,329,5,84,0,0,329,42,1,0,0,0,330,
        331,5,85,0,0,331,332,5,76,0,0,332,333,5,73,0,0,333,334,5,78,0,0,
        334,335,5,84,0,0,335,44,1,0,0,0,336,337,5,76,0,0,337,338,5,82,0,
        0,338,339,5,69,0,0,339,340,5,65,0,0,340,341,5,76,0,0,341,46,1,0,
        0,0,342,343,5,84,0,0,343,344,5,73,0,0,344,345,5,77,0,0,345,346,5,
        69,0,0,346,48,1,0,0,0,347,348,5,68,0,0,348,349,5,65,0,0,349,350,
        5,84,0,0,350,351,5,69,0,0,351,50,1,0,0,0,352,353,5,84,0,0,353,354,
        5,73,0,0,354,355,5,77,0,0,355,356,5,69,0,0,356,357,5,95,0,0,357,
        358,5,79,0,0,358,359,5,70,0,0,359,360,5,95,0,0,360,361,5,68,0,0,
        361,362,5,65,0,0,362,363,5,89,0,0,363,52,1,0,0,0,364,365,5,68,0,
        0,365,366,5,65,0,0,366,367,5,84,0,0,367,368,5,69,0,0,368,369,5,95,
        0,0,369,370,5,65,0,0,370,371,5,78,0,0,371,372,5,68,0,0,372,373,5,
        95,0,0,373,374,5,84,0,0,374,375,5,73,0,0,375,376,5,77,0,0,376,377,
        5,69,0,0,377,54,1,0,0,0,378,379,5,40,0,0,379,56,1,0,0,0,380,381,
        5,41,0,0,381,58,1,0,0,0,382,383,5,61,0,0,383,384,5,62,0,0,384,60,
        1,0,0,0,385,386,5,42,0,0,386,62,1,0,0,0,387,388,5,47,0,0,388,64,
        1,0,0,0,389,390,5,43,0,0,390,66,1,0,0,0,391,392,5,45,0,0,392,68,
        1,0,0,0,393,394,5,60,0,0,394,70,1,0,0,0,395,396,5,62,0,0,396,72,
        1,0,0,0,397,398,5,60,0,0,398,399,5,61,0,0,399,74,1,0,0,0,400,401,
        5,62,0,0,401,402,5,61,0,0,402,76,1,0,0,0,403,404,5,60,0,0,404,405,
        5,62,0,0,405,78,1,0,0,0,406,407,5,123,0,0,407,80,1,0,0,0,408,409,
        5,125,0,0,409,82,1,0,0,0,410,411,5,80,0,0,411,412,5,82,0,0,412,413,
        5,79,0,0,413,414,5,71,0,0,414,415,5,82,0,0,415,416,5,65,0,0,416,
        417,5,77,0,0,417,84,1,0,0,0,418,419,5,69,0,0,419,420,5,78,0,0,420,
        421,5,68,0,0,421,422,5,95,0,0,422,423,5,80,0,0,423,424,5,82,0,0,
        424,425,5,79,0,0,425,426,5,71,0,0,426,427,5,82,0,0,427,428,5,65,
        0,0,428,429,5,77,0,0,429,86,1,0,0,0,430,431,5,70,0,0,431,432,5,85,
        0,0,432,433,5,78,0,0,433,434,5,67,0,0,434,435,5,84,0,0,435,436,5,
        73,0,0,436,437,5,79,0,0,437,438,5,78,0,0,438,439,5,95,0,0,439,440,
        5,66,0,0,440,441,5,76,0,0,441,442,5,79,0,0,442,443,5,67,0,0,443,
        444,5,75,0,0,444,88,1,0,0,0,445,446,5,69,0,0,446,447,5,78,0,0,447,
        448,5,68,0,0,448,449,5,95,0,0,449,450,5,70,0,0,450,451,5,85,0,0,
        451,452,5,78,0,0,452,453,5,67,0,0,453,454,5,84,0,0,454,455,5,73,
        0,0,455,456,5,79,0,0,456,457,5,78,0,0,457,458,5,95,0,0,458,459,5,
        66,0,0,459,460,5,76,0,0,460,461,5,79,0,0,461,462,5,67,0,0,462,463,
        5,75,0,0,463,90,1,0,0,0,464,465,5,70,0,0,465,466,5,85,0,0,466,467,
        5,78,0,0,467,468,5,67,0,0,468,469,5,84,0,0,469,470,5,73,0,0,470,
        471,5,79,0,0,471,472,5,78,0,0,472,92,1,0,0,0,473,474,5,69,0,0,474,
        475,5,78,0,0,475,476,5,68,0,0,476,477,5,95,0,0,477,478,5,70,0,0,
        478,479,5,85,0,0,479,480,5,78,0,0,480,481,5,67,0,0,481,482,5,84,
        0,0,482,483,5,73,0,0,483,484,5,79,0,0,484,485,5,78,0,0,485,94,1,
        0,0,0,486,487,5,80,0,0,487,488,5,82,0,0,488,489,5,79,0,0,489,490,
        5,80,0,0,490,491,5,69,0,0,491,492,5,82,0,0,492,493,5,84,0,0,493,
        494,5,89,0,0,494,96,1,0,0,0,495,496,5,69,0,0,496,497,5,78,0,0,497,
        498,5,68,0,0,498,499,5,95,0,0,499,500,5,80,0,0,500,501,5,82,0,0,
        501,502,5,79,0,0,502,503,5,80,0,0,503,504,5,69,0,0,504,505,5,82,
        0,0,505,506,5,84,0,0,506,507,5,89,0,0,507,98,1,0,0,0,508,509,5,73,
        0,0,509,510,5,77,0,0,510,511,5,80,0,0,511,512,5,76,0,0,512,513,5,
        69,0,0,513,514,5,77,0,0,514,515,5,69,0,0,515,516,5,78,0,0,516,517,
        5,84,0,0,517,518,5,83,0,0,518,100,1,0,0,0,519,520,5,69,0,0,520,521,
        5,88,0,0,521,522,5,84,0,0,522,523,5,69,0,0,523,524,5,78,0,0,524,
        525,5,68,0,0,525,526,5,83,0,0,526,102,1,0,0,0,527,528,5,71,0,0,528,
        529,5,69,0,0,529,530,5,84,0,0,530,104,1,0,0,0,531,532,5,69,0,0,532,
        533,5,78,0,0,533,534,5,68,0,0,534,535,5,95,0,0,535,536,5,71,0,0,
        536,537,5,69,0,0,537,538,5,84,0,0,538,106,1,0,0,0,539,540,5,83,0,
        0,540,541,5,69,0,0,541,542,5,84,0,0,542,108,1,0,0,0,543,544,5,69,
        0,0,544,545,5,78,0,0,545,546,5,68,0,0,546,547,5,95,0,0,547,548,5,
        83,0,0,548,549,5,69,0,0,549,550,5,84,0,0,550,110,1,0,0,0,551,552,
        5,86,0,0,552,553,5,65,0,0,553,554,5,82,0,0,554,112,1,0,0,0,555,556,
        5,86,0,0,556,557,5,65,0,0,557,558,5,82,0,0,558,559,5,95,0,0,559,
        560,5,73,0,0,560,561,5,78,0,0,561,562,5,80,0,0,562,563,5,85,0,0,
        563,564,5,84,0,0,564,114,1,0,0,0,565,566,5,86,0,0,566,567,5,65,0,
        0,567,568,5,82,0,0,568,569,5,95,0,0,569,570,5,79,0,0,570,571,5,85,
        0,0,571,572,5,84,0,0,572,573,5,80,0,0,573,574,5,85,0,0,574,575,5,
        84,0,0,575,116,1,0,0,0,576,577,5,86,0,0,577,578,5,65,0,0,578,579,
        5,82,0,0,579,580,5,95,0,0,580,581,5,73,0,0,581,582,5,78,0,0,582,
        583,5,95,0,0,583,584,5,79,0,0,584,585,5,85,0,0,585,586,5,84,0,0,
        586,118,1,0,0,0,587,588,5,86,0,0,588,589,5,65,0,0,589,590,5,82,0,
        0,590,591,5,95,0,0,591,592,5,84,0,0,592,593,5,69,0,0,593,594,5,77,
        0,0,594,595,5,80,0,0,595,120,1,0,0,0,596,597,5,86,0,0,597,598,5,
        65,0,0,598,599,5,82,0,0,599,600,5,95,0,0,600,601,5,69,0,0,601,602,
        5,88,0,0,602,603,5,84,0,0,603,604,5,69,0,0,604,605,5,82,0,0,605,
        606,5,78,0,0,606,607,5,65,0,0,607,608,5,76,0,0,608,122,1,0,0,0,609,
        610,5,86,0,0,610,611,5,65,0,0,611,612,5,82,0,0,612,613,5,95,0,0,
        613,614,5,71,0,0,614,615,5,76,0,0,615,616,5,79,0,0,616,617,5,66,
        0,0,617,618,5,65,0,0,618,619,5,76,0,0,619,124,1,0,0,0,620,621,5,
        86,0,0,621,622,5,65,0,0,622,623,5,82,0,0,623,624,5,95,0,0,624,625,
        5,73,0,0,625,626,5,78,0,0,626,627,5,83,0,0,627,628,5,84,0,0,628,
        126,1,0,0,0,629,630,5,69,0,0,630,631,5,78,0,0,631,632,5,68,0,0,632,
        633,5,95,0,0,633,634,5,86,0,0,634,635,5,65,0,0,635,636,5,82,0,0,
        636,128,1,0,0,0,637,638,5,73,0,0,638,639,5,70,0,0,639,130,1,0,0,
        0,640,641,5,84,0,0,641,642,5,72,0,0,642,643,5,69,0,0,643,644,5,78,
        0,0,644,132,1,0,0,0,645,646,5,69,0,0,646,647,5,76,0,0,647,648,5,
        83,0,0,648,649,5,73,0,0,649,650,5,70,0,0,650,134,1,0,0,0,651,652,
        5,69,0,0,652,653,5,76,0,0,653,654,5,83,0,0,654,655,5,69,0,0,655,
        136,1,0,0,0,656,657,5,69,0,0,657,658,5,78,0,0,658,659,5,68,0,0,659,
        660,5,95,0,0,660,661,5,73,0,0,661,662,5,70,0,0,662,138,1,0,0,0,663,
        664,5,67,0,0,664,665,5,65,0,0,665,666,5,83,0,0,666,667,5,69,0,0,
        667,140,1,0,0,0,668,669,5,65,0,0,669,670,5,82,0,0,670,671,5,82,0,
        0,671,672,5,65,0,0,672,673,5,89,0,0,673,142,1,0,0,0,674,675,5,79,
        0,0,675,676,5,70,0,0,676,144,1,0,0,0,677,678,5,69,0,0,678,679,5,
        78,0,0,679,680,5,68,0,0,680,681,5,95,0,0,681,682,5,67,0,0,682,683,
        5,65,0,0,683,684,5,83,0,0,684,685,5,69,0,0,685,146,1,0,0,0,686,687,
        5,87,0,0,687,688,5,72,0,0,688,689,5,73,0,0,689,690,5,76,0,0,690,
        691,5,69,0,0,691,148,1,0,0,0,692,693,5,68,0,0,693,694,5,79,0,0,694,
        150,1,0,0,0,695,696,5,69,0,0,696,697,5,78,0,0,697,698,5,68,0,0,698,
        699,5,95,0,0,699,700,5,87,0,0,700,701,5,72,0,0,701,702,5,73,0,0,
        702,703,5,76,0,0,703,704,5,69,0,0,704,152,1,0,0,0,705,706,5,82,0,
        0,706,707,5,69,0,0,707,708,5,80,0,0,708,709,5,69,0,0,709,710,5,65,
        0,0,710,711,5,84,0,0,711,154,1,0,0,0,712,713,5,85,0,0,713,714,5,
        78,0,0,714,715,5,84,0,0,715,716,5,73,0,0,716,717,5,76,0,0,717,156,
        1,0,0,0,718,719,5,69,0,0,719,720,5,78,0,0,720,721,5,68,0,0,721,722,
        5,95,0,0,722,723,5,82,0,0,723,724,5,69,0,0,724,725,5,80,0,0,725,
        726,5,69,0,0,726,727,5,65,0,0,727,728,5,84,0,0,728,158,1,0,0,0,729,
        730,5,70,0,0,730,731,5,79,0,0,731,732,5,82,0,0,732,160,1,0,0,0,733,
        734,5,84,0,0,734,735,5,79,0,0,735,162,1,0,0,0,736,737,5,66,0,0,737,
        738,5,89,0,0,738,164,1,0,0,0,739,740,5,69,0,0,740,741,5,78,0,0,741,
        742,5,68,0,0,742,743,5,95,0,0,743,744,5,70,0,0,744,745,5,79,0,0,
        745,746,5,82,0,0,746,166,1,0,0,0,747,748,5,82,0,0,748,749,5,69,0,
        0,749,750,5,84,0,0,750,751,5,85,0,0,751,752,5,82,0,0,752,753,5,78,
        0,0,753,168,1,0,0,0,754,755,5,69,0,0,755,756,5,88,0,0,756,757,5,
        73,0,0,757,758,5,84,0,0,758,170,1,0,0,0,759,760,5,67,0,0,760,761,
        5,79,0,0,761,762,5,78,0,0,762,763,5,84,0,0,763,764,5,73,0,0,764,
        765,5,78,0,0,765,766,5,85,0,0,766,767,5,69,0,0,767,172,1,0,0,0,768,
        769,5,65,0,0,769,770,5,78,0,0,770,771,5,68,0,0,771,174,1,0,0,0,772,
        773,5,79,0,0,773,774,5,82,0,0,774,176,1,0,0,0,775,776,5,88,0,0,776,
        777,5,79,0,0,777,778,5,82,0,0,778,178,1,0,0,0,779,780,5,77,0,0,780,
        781,5,69,0,0,781,782,5,84,0,0,782,783,5,72,0,0,783,784,5,79,0,0,
        784,785,5,68,0,0,785,180,1,0,0,0,786,787,5,69,0,0,787,788,5,78,0,
        0,788,789,5,68,0,0,789,790,5,95,0,0,790,791,5,77,0,0,791,792,5,69,
        0,0,792,793,5,84,0,0,793,794,5,72,0,0,794,795,5,79,0,0,795,796,5,
        68,0,0,796,182,1,0,0,0,797,798,5,73,0,0,798,799,5,78,0,0,799,800,
        5,84,0,0,800,801,5,69,0,0,801,802,5,82,0,0,802,803,5,70,0,0,803,
        804,5,65,0,0,804,805,5,67,0,0,805,806,5,69,0,0,806,184,1,0,0,0,807,
        808,5,69,0,0,808,809,5,78,0,0,809,810,5,68,0,0,810,811,5,95,0,0,
        811,812,5,73,0,0,812,813,5,78,0,0,813,814,5,84,0,0,814,815,5,69,
        0,0,815,816,5,82,0,0,816,817,5,70,0,0,817,818,5,65,0,0,818,819,5,
        67,0,0,819,820,5,69,0,0,820,186,1,0,0,0,821,822,5,67,0,0,822,823,
        5,76,0,0,823,824,5,65,0,0,824,825,5,83,0,0,825,826,5,83,0,0,826,
        188,1,0,0,0,827,828,5,69,0,0,828,829,5,78,0,0,829,830,5,68,0,0,830,
        831,5,95,0,0,831,832,5,67,0,0,832,833,5,76,0,0,833,834,5,65,0,0,
        834,835,5,83,0,0,835,836,5,83,0,0,836,190,1,0,0,0,837,838,5,83,0,
        0,838,839,5,84,0,0,839,840,5,82,0,0,840,841,5,85,0,0,841,842,5,67,
        0,0,842,843,5,84,0,0,843,192,1,0,0,0,844,845,5,69,0,0,845,846,5,
        78,0,0,846,847,5,68,0,0,847,848,5,95,0,0,848,849,5,83,0,0,849,850,
        5,84,0,0,850,851,5,82,0,0,851,852,5,85,0,0,852,853,5,67,0,0,853,
        854,5,84,0,0,854,194,1,0,0,0,855,856,5,69,0,0,856,857,5,78,0,0,857,
        858,5,85,0,0,858,859,5,77,0,0,859,196,1,0,0,0,860,861,5,69,0,0,861,
        862,5,78,0,0,862,863,5,68,0,0,863,864,5,95,0,0,864,865,5,69,0,0,
        865,866,5,78,0,0,866,867,5,85,0,0,867,868,5,77,0,0,868,198,1,0,0,
        0,869,870,5,78,0,0,870,871,5,65,0,0,871,872,5,77,0,0,872,873,5,69,
        0,0,873,874,5,83,0,0,874,875,5,80,0,0,875,876,5,65,0,0,876,877,5,
        67,0,0,877,878,5,69,0,0,878,200,1,0,0,0,879,880,5,69,0,0,880,881,
        5,78,0,0,881,882,5,68,0,0,882,883,5,95,0,0,883,884,5,78,0,0,884,
        885,5,65,0,0,885,886,5,77,0,0,886,887,5,69,0,0,887,888,5,83,0,0,
        888,889,5,80,0,0,889,890,5,65,0,0,890,891,5,67,0,0,891,892,5,69,
        0,0,892,202,1,0,0,0,893,894,5,84,0,0,894,895,5,89,0,0,895,896,5,
        80,0,0,896,897,5,69,0,0,897,898,5,68,0,0,898,899,5,69,0,0,899,900,
        5,70,0,0,900,204,1,0,0,0,901,902,5,65,0,0,902,903,5,66,0,0,903,904,
        5,83,0,0,904,905,5,84,0,0,905,906,5,82,0,0,906,907,5,65,0,0,907,
        908,5,67,0,0,908,909,5,84,0,0,909,206,1,0,0,0,910,911,5,70,0,0,911,
        912,5,73,0,0,912,913,5,78,0,0,913,914,5,65,0,0,914,915,5,76,0,0,
        915,208,1,0,0,0,916,917,5,83,0,0,917,918,5,69,0,0,918,919,5,65,0,
        0,919,920,5,76,0,0,920,921,5,69,0,0,921,922,5,68,0,0,922,210,1,0,
        0,0,923,924,5,79,0,0,924,925,5,86,0,0,925,926,5,69,0,0,926,927,5,
        82,0,0,927,928,5,82,0,0,928,929,5,73,0,0,929,930,5,68,0,0,930,931,
        5,69,0,0,931,212,1,0,0,0,932,933,5,83,0,0,933,934,5,84,0,0,934,935,
        5,65,0,0,935,936,5,84,0,0,936,937,5,73,0,0,937,938,5,67,0,0,938,
        214,1,0,0,0,939,940,5,67,0,0,940,941,5,79,0,0,941,942,5,78,0,0,942,
        943,5,83,0,0,943,944,5,84,0,0,944,945,5,65,0,0,945,946,5,78,0,0,
        946,947,5,84,0,0,947,216,1,0,0,0,948,949,5,82,0,0,949,950,5,69,0,
        0,950,951,5,65,0,0,951,952,5,68,0,0,952,953,5,79,0,0,953,954,5,78,
        0,0,954,955,5,76,0,0,955,956,5,89,0,0,956,218,1,0,0,0,957,958,5,
        80,0,0,958,959,5,85,0,0,959,960,5,66,0,0,960,961,5,76,0,0,961,962,
        5,73,0,0,962,963,5,67,0,0,963,220,1,0,0,0,964,965,5,80,0,0,965,966,
        5,82,0,0,966,967,5,73,0,0,967,968,5,86,0,0,968,969,5,65,0,0,969,
        970,5,84,0,0,970,971,5,69,0,0,971,222,1,0,0,0,972,973,5,80,0,0,973,
        974,5,82,0,0,974,975,5,79,0,0,975,976,5,84,0,0,976,977,5,69,0,0,
        977,978,5,67,0,0,978,979,5,84,0,0,979,980,5,69,0,0,980,981,5,68,
        0,0,981,224,1,0,0,0,982,983,5,73,0,0,983,984,5,78,0,0,984,985,5,
        84,0,0,985,986,5,69,0,0,986,987,5,82,0,0,987,988,5,78,0,0,988,989,
        5,65,0,0,989,990,5,76,0,0,990,226,1,0,0,0,991,992,5,82,0,0,992,993,
        5,69,0,0,993,994,5,70,0,0,994,995,5,69,0,0,995,996,5,82,0,0,996,
        997,5,69,0,0,997,998,5,78,0,0,998,999,5,67,0,0,999,1000,5,69,0,0,
        1000,1001,5,32,0,0,1001,1002,5,84,0,0,1002,1003,5,79,0,0,1003,228,
        1,0,0,0,1004,1005,5,77,0,0,1005,1006,5,79,0,0,1006,1007,5,68,0,0,
        1007,230,1,0,0,0,1008,1009,5,84,0,0,1009,1010,5,82,0,0,1010,1011,
        5,85,0,0,1011,1018,5,69,0,0,1012,1013,5,70,0,0,1013,1014,5,65,0,
        0,1014,1015,5,76,0,0,1015,1016,5,83,0,0,1016,1018,5,69,0,0,1017,
        1008,1,0,0,0,1017,1012,1,0,0,0,1018,232,1,0,0,0,1019,1023,7,0,0,
        0,1020,1022,7,1,0,0,1021,1020,1,0,0,0,1022,1025,1,0,0,0,1023,1021,
        1,0,0,0,1023,1024,1,0,0,0,1024,234,1,0,0,0,1025,1023,1,0,0,0,1026,
        1028,7,2,0,0,1027,1026,1,0,0,0,1028,1029,1,0,0,0,1029,1027,1,0,0,
        0,1029,1030,1,0,0,0,1030,1037,1,0,0,0,1031,1033,5,46,0,0,1032,1034,
        7,2,0,0,1033,1032,1,0,0,0,1034,1035,1,0,0,0,1035,1033,1,0,0,0,1035,
        1036,1,0,0,0,1036,1038,1,0,0,0,1037,1031,1,0,0,0,1037,1038,1,0,0,
        0,1038,236,1,0,0,0,1039,1043,5,34,0,0,1040,1042,8,3,0,0,1041,1040,
        1,0,0,0,1042,1045,1,0,0,0,1043,1041,1,0,0,0,1043,1044,1,0,0,0,1044,
        1046,1,0,0,0,1045,1043,1,0,0,0,1046,1047,5,34,0,0,1047,238,1,0,0,
        0,1048,1050,7,4,0,0,1049,1048,1,0,0,0,1050,1051,1,0,0,0,1051,1049,
        1,0,0,0,1051,1052,1,0,0,0,1052,1053,1,0,0,0,1053,1054,6,119,0,0,
        1054,240,1,0,0,0,1055,1056,5,47,0,0,1056,1057,5,47,0,0,1057,1061,
        1,0,0,0,1058,1060,8,5,0,0,1059,1058,1,0,0,0,1060,1063,1,0,0,0,1061,
        1059,1,0,0,0,1061,1062,1,0,0,0,1062,1064,1,0,0,0,1063,1061,1,0,0,
        0,1064,1065,6,120,0,0,1065,242,1,0,0,0,9,0,1017,1023,1029,1035,1037,
        1043,1051,1061,1,6,0,0
    ];

    private static __ATN: antlr.ATN;
    public static get _ATN(): antlr.ATN {
        if (!StructuredTextLexer.__ATN) {
            StructuredTextLexer.__ATN = new antlr.ATNDeserializer().deserialize(StructuredTextLexer._serializedATN);
        }

        return StructuredTextLexer.__ATN;
    }


    private static readonly vocabulary = new antlr.Vocabulary(StructuredTextLexer.literalNames, StructuredTextLexer.symbolicNames, []);

    public override get vocabulary(): antlr.Vocabulary {
        return StructuredTextLexer.vocabulary;
    }

    private static readonly decisionsToDFA = StructuredTextLexer._ATN.decisionToState.map( (ds: antlr.DecisionState, index: number) => new antlr.DFA(ds, index) );
}